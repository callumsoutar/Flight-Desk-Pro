{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///Users/callumsoutar/flightdeskpro/src/lib/supabaseServerClient.ts"],"sourcesContent":["import { createServerClient } from '@supabase/ssr';\nimport { cookies } from 'next/headers';\n\nexport async function createClient() {\n  const cookieStore = await cookies();\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll();\n        },\n        setAll(cookiesToSet) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            );\n          } catch {\n            // The `setAll` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing user sessions.\n          }\n        },\n      },\n    }\n  );\n} "],"names":[],"mappings":";;;AAAA;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEhC,OAAO,CAAA,GAAA,2KAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,uEAAuE;gBACzE;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///Users/callumsoutar/flightdeskpro/src/app/api/audit-logs/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { createClient } from '@/lib/supabaseServerClient';\n\nconst FIELD_LABELS: Record<string, string> = {\n  aircraft_id: 'aircraft',\n  instructor_id: 'instructor',\n  start_time: 'start time',\n  end_time: 'end time',\n  purpose: 'description',\n  remarks: 'remarks',\n  updated_at: 'updated at',\n};\n\nconst IGNORED_FIELDS = ['updated_at', 'created_at', 'organization_id', 'id', 'user_id'];\n\nasync function resolveUserName(supabase: any, userId: string | null) {\n  if (!userId) return null;\n  const { data } = await supabase\n    .from('users')\n    .select('first_name, last_name')\n    .eq('id', userId)\n    .single();\n  if (!data) return null;\n  return `${data.first_name || ''} ${data.last_name || ''}`.trim();\n}\n\nasync function resolveAircraft(supabase: any, aircraftId: string | null) {\n  if (!aircraftId) return null;\n  const { data } = await supabase\n    .from('aircraft')\n    .select('registration')\n    .eq('id', aircraftId)\n    .single();\n  if (!data) return null;\n  return data.registration;\n}\n\nasync function resolveInstructor(supabase: any, instructorId: string | null) {\n  if (!instructorId) return null;\n  const { data } = await supabase\n    .from('users')\n    .select('first_name, last_name')\n    .eq('id', instructorId)\n    .single();\n  if (!data) return null;\n  return `${data.first_name || ''} ${data.last_name || ''}`.trim();\n}\n\nfunction formatValue(field: string, value: any) {\n  if (value === null || value === undefined) return '—';\n  if (field.endsWith('_at') && typeof value === 'string') {\n    return new Date(value).toLocaleString();\n  }\n  return String(value);\n}\n\nfunction formatAuditDate(date: string) {\n  return new Date(date).toLocaleString(undefined, {\n    year: 'numeric', month: 'short', day: 'numeric',\n    hour: '2-digit', minute: '2-digit', hour12: true\n  });\n}\n\nexport async function GET(req: NextRequest) {\n  const { searchParams } = new URL(req.url);\n  const rowId = searchParams.get('rowId');\n  const tableName = searchParams.get('tableName');\n  if (!rowId || !tableName) {\n    return NextResponse.json({ logs: [] }, { status: 400 });\n  }\n\n  const supabase = await createClient();\n  const { data, error } = await supabase\n    .from('audit_logs')\n    .select('id, action, changed_by, changed_at, column_changes')\n    .eq('row_id', rowId)\n    .eq('table_name', tableName)\n    .order('changed_at', { ascending: false });\n\n  if (error) {\n    return NextResponse.json({ logs: [], error: error.message }, { status: 500 });\n  }\n\n  // Collect all userIds, aircraftIds, instructorIds to resolve in batch\n  const userIds = Array.from(new Set(data.map((log: any) => log.changed_by).filter(Boolean)));\n  const aircraftIds = Array.from(new Set(\n    data.flatMap((log: any) =>\n      log.column_changes ? [log.column_changes.aircraft_id?.old, log.column_changes.aircraft_id?.new] : []\n    ).filter(Boolean)\n  ));\n  const instructorIds = Array.from(new Set(\n    data.flatMap((log: any) =>\n      log.column_changes ? [log.column_changes.instructor_id?.old, log.column_changes.instructor_id?.new] : []\n    ).filter(Boolean)\n  ));\n\n  // Batch fetch users and aircraft\n  const [usersRes, aircraftRes, instructorsRes] = await Promise.all([\n    userIds.length\n      ? supabase.from('users').select('id, first_name, last_name').in('id', userIds)\n      : Promise.resolve({ data: [] }),\n    aircraftIds.length\n      ? supabase.from('aircraft').select('id, registration').in('id', aircraftIds)\n      : Promise.resolve({ data: [] }),\n    instructorIds.length\n      ? supabase.from('users').select('id, first_name, last_name').in('id', instructorIds)\n      : Promise.resolve({ data: [] }),\n  ]);\n  const userMap = Object.fromEntries((usersRes.data || []).map((u: any) => [u.id, `${u.first_name || ''} ${u.last_name || ''}`.trim()]));\n  const aircraftMap = Object.fromEntries((aircraftRes.data || []).map((a: any) => [a.id, a.registration]));\n  const instructorMap = Object.fromEntries((instructorsRes.data || []).map((u: any) => [u.id, `${u.first_name || ''} ${u.last_name || ''}`.trim()]));\n\n  // Build user-friendly messages\n  const logs = await Promise.all(\n    data.map(async (log: any) => {\n      let user = userMap[log.changed_by] || 'Someone';\n      let date = formatAuditDate(log.changed_at);\n      let descriptions: string[] = [];\n      if (log.column_changes) {\n        for (const [field, value] of Object.entries(log.column_changes)) {\n          if (IGNORED_FIELDS.includes(field)) continue;\n          let label = FIELD_LABELS[field] || field.replace(/_/g, ' ');\n          let oldDisplay = '—';\n          let newDisplay = '—';\n          if (value && typeof value === 'object' && 'old' in value && 'new' in value) {\n            // @ts-ignore\n            oldDisplay = formatValue(field, value.old);\n            // @ts-ignore\n            newDisplay = formatValue(field, value.new);\n            if (field === 'aircraft_id') {\n              // @ts-ignore\n              oldDisplay = aircraftMap[value.old] || oldDisplay;\n              // @ts-ignore\n              newDisplay = aircraftMap[value.new] || newDisplay;\n            }\n            if (field === 'instructor_id') {\n              // @ts-ignore\n              oldDisplay = instructorMap[value.old] || oldDisplay;\n              // @ts-ignore\n              newDisplay = instructorMap[value.new] || newDisplay;\n            }\n          }\n          descriptions.push(`${label.charAt(0).toUpperCase() + label.slice(1)} changed from \"${oldDisplay}\" to \"${newDisplay}\"`);\n        }\n      }\n      if (descriptions.length === 0) {\n        if (log.action === 'INSERT') {\n          descriptions.push('Booking Created');\n        } else if (log.action === 'DELETE') {\n          descriptions.push('Booking Deleted');\n        } else if (log.action === 'UPDATE') {\n          descriptions.push('Booking Updated');\n        }\n      }\n      return {\n        date,\n        user,\n        description: descriptions.join('; '),\n      };\n    })\n  );\n\n  return NextResponse.json({ logs });\n} "],"names":[],"mappings":"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","debugId":null}}]
}